apply plugin: 'application'

project.ext.mainClassName = 'com.ylinor.client.desktop.DesktopLauncher'
project.ext.assetsDir = new File('../client-core/assets');

mainClassName = project.ext.mainClassName

archivesBaseName = 'ylinor'

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);
 
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes

eclipse {
    project {
        name = 'client-desktop'
        linkedResource name: 'assets', type: '2', location: 'PARENT-1-PROJECT_LOC/client-core/assets'
    }
}

task afterEclipseImport(description: 'Post processing after project generation', group: 'IDE') {
  doLast {
    def classpath = new XmlParser().parse(file('.classpath'))
    new Node(classpath, 'classpathentry', [ kind: 'src', path: 'assets' ]);
    def writer = new FileWriter(file('.classpath'))
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace(true)
    printer.print(classpath)
  }
}

dependencies {
    compile project(':client-core')

    compile "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
}